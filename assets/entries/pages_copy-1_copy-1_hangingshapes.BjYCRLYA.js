import{j as e,f as b,a as n,b as f,c as l,s as d,d as s,p as r,i as m,e as h,R as u,g as w,h as y}from"../chunks/chunk-D9dRmPFQ.js";import{P as v}from"../chunks/chunk-BB6SvIQm.js";const x="AmanKangde | Game Developer Portfolio | Game Programmer Portfolio ",p={id:"5c0a4aaff6c33ce9a4150c9e5af4c43ac75600c96209efa7a3d2166c6375d34f",name:"Untitled_(1)_ahV9D45k7GMACHjNqPVxx.png",description:null,projectId:"a02726d8-563c-4f42-8908-26bd9ae79bd1",size:79601,type:"image",format:"png",createdAt:"2024-12-04T16:35:33.346+00:00",meta:{width:524,height:524}},q=[{id:"09711b5ef181d57e357932e47f1dbd0aa0db66f0e6a8e1693ca96d849d9a298a",name:"RubikMonoOne-Regular_s-E84YiTVfN-6XNIntGH3.ttf",description:null,projectId:"a02726d8-563c-4f42-8908-26bd9ae79bd1",size:117132,type:"font",createdAt:"2024-11-03T12:48:14.043+00:00",format:"ttf",meta:{family:"Rubik Mono One",style:"normal",weight:400}},{id:"235d9a04ca15cb3a4ba1469299290d6a672e556d6f71694dbeca5044fcb1d75a",name:"AntonSC-Regular_J8K1lQlqmYMZ1LbYBF8iR.ttf",description:null,projectId:"a02726d8-563c-4f42-8908-26bd9ae79bd1",size:154020,type:"font",createdAt:"2024-11-03T12:56:59.789+00:00",format:"ttf",meta:{family:"Anton SC",style:"normal",weight:400}}],k=[{id:"dd65d982008c83b802226ba9c070df95d01d9dfdbcf65ed14ac5743c97c5544c",name:"person_P19j91FByqaVz5gMi8TUF.png",description:null,projectId:"a02726d8-563c-4f42-8908-26bd9ae79bd1",size:13291,type:"image",format:"png",createdAt:"2024-12-02T20:23:45.083+00:00",meta:{width:620,height:800}}],N=({})=>e.jsxs(b,{className:"w-body c27prhm c11z26nr c6zyqxx csw5j8g caefagj c15cxtqk c1m40iw6 cx22scs cyj4rig c1mhifg4 cnlqukt czhg58z c1dr7eob c1fs3yqx c1q8sjri",children:[e.jsxs(n,{className:"w-box c15aaifc c12qsw4q cdiabac csxafh2 cjd0vpi ce86ia6 csehnsj c1i3v1x6 cb6962b cyj4rig c1q8sjri ck1t6gl c14qem5p",children:[e.jsx(v,{code:'<iframe src="https://amankangde.github.io/GamesForPortfolio/upupgame/" width="1200" height="720" frameborder="0"></iframe>  ',className:"w-html-embed"}),e.jsx(n,{className:"w-box c1pzosaw c1tbv6je c13bx5ui cmbdby0 cvhif81 cztmzhu c1x7ofdk c317u35 c1ma8lmc che7q9b c18lbslx c1jjgf2j c1nzseaj cqmdpat c1i3v1x6 cb6962b cyj4rig",children:e.jsx(f,{href:"/",className:"w-link c1pzosaw csw5j8g cys5xwt c15xlsv4 csehnsj c1wr6rkb c1gb14g8 c1thbfsf c3ma0lb c91fvdk c1y9oiy8 c1957sus cff3olz c1mhifg4 cnlqukt czhg58z c1dr7eob c1yvqxhr c1m40iw6 cz2j1r8 c1aaf9ys",children:"< Go Back"})}),e.jsx(l,{className:"w-heading c1ncntm1 c12asl58 c1u7dy9t cv992zp cjw0dnq c1n9qujh c1pzosaw cixi52p cacq34v cu8x5cv coznzbc",children:"Unknown_Player_Unknown_Platform"})]}),e.jsxs(n,{className:"w-box c1tjm34e cjgjybp cky41ow c1n3cqhl c1i3v1x6 cb6962b cyj4rig csxafh2 cjd0vpi",children:[e.jsxs(n,{className:"w-box cfxhcbv c1a86dyo cum9tmf c1fs3yqx csw5j8g c1g451d9 c1yyvlhx c18lbslx c1jjgf2j c1nzseaj cqmdpat csde1f2 cejihyp c1sug79a cfrql2t c91fvdk c1y9oiy8 c1957sus cff3olz",children:[e.jsx(l,{className:"w-heading c7aredc c3ma0lb c18ad57s c1wn4jjz ca4ud cfiwikk c1p1ati c15xlsv4 c1h6j825 c1vppxcy",children:"About"}),e.jsxs(d,{className:"w-text c1nc9wji ctvdtvq c4h5wsv cg8zxag c123qdsv chnifig c1n87zhs",children:[e.jsx(s,{className:"w-bold-text",children:"UpUp: Unknown Player, Unknown Platform"})," is a platformer game where players navigate an unpredictable environment, using boxes they can instantiate to fill gaps and overcome obstacles. The game challenges players to survive and adapt quickly to the ever-changing terrain, focusing on problem-solving and strategic thinking to progress through each level."]})]}),e.jsxs(n,{className:"w-box cfxhcbv coeof06 ck1t6gl c1fs3yqx c18ad57s c1nc9wji c1g451d9 c1yyvlhx c18lbslx c1jjgf2j c1nzseaj cqmdpat",children:[e.jsx(l,{className:"w-heading c7aredc cr3r063 c1wn4jjz ca4ud cfiwikk c1p1ati c15xlsv4 c1h6j825 c1vppxcy",children:"Project Info"}),e.jsxs(d,{className:"w-text c1nc9wji c19ac5yo c2sd7vq c1ibt47k cbdc84v",children:[" Role: Gameplay Programmer, Tech Artist, UI/UX, Environment Design","",e.jsx("br",{}),""," Team Size: 3","",e.jsx("br",{}),""," Time frame: 1 Week","",e.jsx("br",{}),""," Engine: Unity (C#)"]}),e.jsx(r,{src:"/assets/person_P19j91FByqaVz5gMi8TUF.png",width:512,height:512,className:"w-image cil51p2 cdxjwme c1pzosaw cdyi58x cbzipp4 c1yp3827 cavuhjh cougkkr c3rk8sq c1iqu9rv c99lmti crx3ppa c1y8cl0q cggj8z6 ckr2s8p c1yt6k1x c9lvr2e c1xwoc6q c1bse5dd c12ydyiy ci27epu c1t8jhup c1ow0c7k cubuy9b c133d2ad"}),e.jsx(r,{src:"/assets/team_tqDL8UNK-SLg0B9e40LmI.png",width:512,height:512,className:"w-image c1eqair4 c77fce8 c1pzosaw cdyi58x ch43ppi c1hforj5"}),e.jsx(r,{src:"/assets/watch_VWfAxkHLwp3eb-BGESg4i.png",width:512,height:512,className:"w-image c1gqoudc c1k5gflf c1pzosaw cdyi58x cx475wd crx3ppa"}),e.jsx(r,{src:"/assets/engine_QqMRFxvCJChahUEuqFmX3.png",width:512,height:512,className:"w-image c1isjv3l c17bviph c1pzosaw cdyi58x clnh5jj czyq110"})]}),e.jsx(n,{className:"w-box c2p0qmu csxafh2 c1fs3yqx c1i3v1x6 cb6962b cyj4rig c1pzosaw cjd0vpi c27prhm c3pyz0v c1leun2e c15eb96v c1asovgf ctvdtvq c1nc9wji c159ch8p",children:e.jsxs(d,{className:"w-text czy0qes cqsks3t c1habcen cr3r063 ceni0vr c1nc9wji ct05nvq",children:[e.jsx(s,{className:"w-bold-text",children:"UpUp: Unknown Player, Unknown Platform"})," is a dynamic platformer game where players must navigate through an unpredictable environment. The game centers around the challenge of filling gaps in the terrain using boxes that can be instantiated at strategic locations to overcome obstacles and survive. Here's a detailed breakdown of the game's mechanics, UI/UX, HUD, audio, optimization, programming, challenges, learning, and post-processing:","",e.jsx("br",{}),"","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1xl6a66",children:"Game Mechanics:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Core Gameplay:"})," The player must traverse through a constantly changing and unstable platform environment. To fill gaps and bridge platforms, players can instantiate boxes at specific points, ensuring they can continue their journey without falling.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Box Instantiation:"})," Players can create boxes at any given time, but they must strategically decide where to place them, as the number of boxes available may be limited, requiring careful resource management.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Obstacles and Challenges:"})," The terrain is unpredictable, with obstacles like moving platforms, disappearing ground, and spikes. The player must avoid falling or getting hit, using quick reflexes and strategy to survive.","",e.jsx("br",{}),"","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1ikfn99",children:"UI/UX and HUD:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"UI Design:"})," The game features a minimalist UI, with clear instructions and feedback to keep the player informed without distracting from gameplay. A simple main menu lets players start or restart the game, while the pause menu offers options like resume and quit.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1ikfn99",children:"HUD Elements:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Box Count:"})," A display showing how many boxes the player has available to instantiate.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Health/Survival:"})," A health bar or survival meter, indicating how much progress the player has made or how close they are to being overwhelmed.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Score:"})," A score tracker that rewards players for how far they've progressed, based on the platforms they've crossed or the number of obstacles they've overcome.","",e.jsx("br",{}),"","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1ikfn99",children:"Audio:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Sound Effects:"})," The game includes sound effects for player actions like jumping, placing boxes, landing, and triggering obstacles. These sounds enhance immersion and give immediate feedback to player actions.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Background Music:"})," A dynamic soundtrack adjusts to the gameplay pace, increasing tension as obstacles become more difficult or calming during safe moments.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Environmental Sounds:"})," Footsteps, platform movements, and the subtle sounds of the environment change as the player progresses, further engaging the player in the world.","",e.jsx("br",{}),"","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1ikfn99",children:"Optimization:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Efficient Asset Usage:"})," Optimization techniques such as object pooling for boxes and other in-game elements are used to reduce memory usage and improve performance across various devices.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Level Streaming:"})," The game uses level streaming techniques to load only necessary chunks of the platform at any given time, ensuring smoother gameplay without overloading the system.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Performance Testing:"})," Extensive testing across different devices ensures that the game runs efficiently, with adjustments to the physics engine and visual complexity for smoother performance on lower-end systems.","",e.jsx("br",{}),"","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1ikfn99",children:"Programming:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Core Systems:"})," The game’s mechanics, such as box instantiation, platform generation, and obstacle behavior, are controlled using C# scripts in Unity. Physics interactions like gravity, collision detection, and player movement are fine-tuned for realistic gameplay.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Procedural Generation:"})," The environment is procedurally generated, meaning each playthrough is different, keeping the gameplay fresh. The placement of gaps, obstacles, and platforms varies with every session, ensuring a unique challenge every time.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Player Controls:"})," The player character is controlled using simple movement and jump mechanics, with an intuitive system for box instantiation triggered by player input (e.g., pressing a button).","",e.jsx("br",{}),"","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1ikfn99",children:"Challenges and Learning:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Level Design:"})," Balancing the difficulty curve was a key challenge. The unpredictability of the platform environment required careful planning to ensure players weren’t overwhelmed while maintaining a fun challenge.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Box Management:"})," Designing the mechanics for box instantiation, with limited resources, required constant tweaking to ensure the game remained challenging but fair.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Optimizing for Multiple Devices:"})," Ensuring smooth performance across various platforms, especially mobile devices with limited resources, was a significant hurdle, solved through smart optimizations like object pooling and level streaming.","",e.jsx("br",{}),"","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text c1ikfn99",children:"Post-Processing:"}),"",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Visual Enhancements:"})," Post-processing effects are used to enhance the game’s visuals, including bloom effects, ambient occlusion, and color grading to create a more immersive atmosphere.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Cinematic Effects:"})," During key moments, such as critical jumps or close calls, camera effects like depth of field, motion blur, and dynamic lighting changes are used to add cinematic flair.","",e.jsx("br",{}),"","",e.jsx("br",{}),"",e.jsx(s,{className:"w-bold-text cjw0dnq",children:"Visual Feedback:"})," Subtle post-processing effects are employed to indicate damage or success, such as slight screen shake or color changes, to give the player immediate visual feedback on their actions or mistakes.","",e.jsx("br",{}),""," "]})})]})]}),z=({data:c})=>{const{pageMeta:a}=c,{origin:i}=new URL(c.url),o={"@context":"https://schema.org","@type":"WebSite",name:x,url:i};let g=a.socialImageUrl;return a.socialImageAssetName&&(g=`${i}${m({src:a.socialImageAssetName,format:"raw"})}`),e.jsxs(e.Fragment,{children:[c.url&&e.jsx("meta",{property:"og:url",content:c.url}),e.jsx("title",{children:a.title}),e.jsx("meta",{property:"og:title",content:a.title}),a.description&&e.jsxs(e.Fragment,{children:[e.jsx("meta",{name:"description",content:a.description}),e.jsx("meta",{property:"og:description",content:a.description})]}),e.jsx("meta",{property:"og:type",content:"website"}),e.jsx("meta",{property:"og:site_name",content:x}),g&&e.jsx("meta",{property:"og:image",content:a.socialImageUrl}),e.jsx("script",{type:"application/ld+json",dangerouslySetInnerHTML:{__html:JSON.stringify(o,null,2)}}),a.excludePageFromSearch&&e.jsx("meta",{name:"robots",content:"noindex, nofollow"}),a.custom.map(({property:t,content:j})=>e.jsx("meta",{property:t,content:j},t)),p&&e.jsx("link",{rel:"icon",href:m({src:p.name,width:144,height:144,fit:"pad",quality:100,format:"auto"})}),q.map(t=>e.jsx("link",{rel:"preload",href:`${h}${t.name}`,as:"font",crossOrigin:"anonymous"},t.id)),k.map(t=>e.jsx("link",{rel:"preload",href:`${h}${t.name}`,as:"image"},t.id))]})},T=Object.freeze(Object.defineProperty({__proto__:null,Head:z},Symbol.toStringTag,{value:"Module"})),U=({data:c})=>{const{system:a,resources:i,url:o}=c;return e.jsx(u.Provider,{value:{imageLoader:m,assetBaseUrl:h,imageBaseUrl:w,resources:i},children:e.jsx(N,{system:a},o)})},P=Object.freeze(Object.defineProperty({__proto__:null,default:U},Symbol.toStringTag,{value:"Module"})),_={onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"/renderer/+onRenderClient.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:y}},Head:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/copy-1/copy-1/hangingshapes/+Head.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:T}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/copy-1/copy-1/hangingshapes/+Page.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:P}}};export{_ as configValuesSerialized};
